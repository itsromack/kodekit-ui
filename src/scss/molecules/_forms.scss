/*
Forms

markup:
<p>
    <input class="k-form-control" type="text" />
</p>
<p>
    <select class="k-form-control">
        <option>Option</option>
    </select>
</p>
<p>
    <textarea class="k-form-control"></textarea>
</p>

Styleguide 2.9

*/

/**
 * 1. Make inputs at least the height of their button counterpart (base line-height + padding + border)
 * 2. Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
 * 3. Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
 * 4. Customize the `:focus` state to imitate native WebKit styles.
 * 5. Unstyle the caret on `<select>`s in IE10+.
 * 6. iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
 */

.k-form-control {
  display: block;
  width: 100%;
  height: $input-height-base; /* 1 */
  padding: $spacing-base-vertical $spacing-base-horizontal;
  font-size: $font-size;
  line-height: $line-height;
  color: $input-color;
  background-color: $input-background;
  background-image: none; /* 2 */
  border: 1px solid $input-border;
  border-radius: $input-border-radius; /* 3 */
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;


  /* 4 */

  @include form-control-focus;


  /* Placeholders */

  &::-moz-placeholder {
    color: $input-color-placeholder;
    opacity: 1;
  }

  &:-ms-input-placeholder {
    color: $input-color-placeholder;
  }

  &::-webkit-input-placeholder  {
    color: $input-color-placeholder;
  }

  /* 5 */
  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }


  /* Disabled and read-only inputs */

  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: $input-background-disabled;
    opacity: 1; /* 6 */
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
}


/* Reset height for `textarea`s */

textarea.k-form-control {
  height: auto;
}


/**
 * Search inputs in iOS
 *
 * This overrides the extra rounded corners on search inputs in iOS so that our
 * `.k-form-control` class can properly style them. Note that this cannot simply
 * be added to `.k-form-control` as it's not specific enough. For details, see
 * https://github.com/twbs/bootstrap/issues/11586.
 */

input[type="search"] {
  -webkit-appearance: none;
}


/**
 * Special styles for iOS temporal inputs
 *
 * In Mobile Safari, setting `display: block` on temporal inputs causes the
 * text within the input to become vertically misaligned. As a workaround, we
 * set a pixel line-height that matches the given height of the input, but only
 * for Safari. See https://bugs.webkit.org/show_bug.cgi?id=139848
 *
 * Note that as of 8.3, iOS doesn't support `datetime` or `week`.
 */

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type="date"],
  input[type="time"],
  input[type="datetime-local"],
  input[type="month"] {
    &.k-form-control {
      line-height: $input-height-base;
    }

    .k-input-group--small & {
      line-height: $input-height-small;
    }

    .k-input-group--large & {
      line-height: $input-height-large;
    }
  }
}


/*
Checkbox & Radio inputs

CSS only styled checkboxes and radio boxes

markup:
<div class="k-form-group">
    <input type="checkbox" id="input-[2.9.1]-1" />
    <label for="input-[2.9.1]-1">Label 1</label>
</div>
<div class="k-form-group">
    <input type="radio" id="input-[2.9.1]-2" />
    <label for="input-[2.9.1]-2">Label 2</label>
</div>
<!-- Or -->
<div class="k-form-group">
    <label><input type="checkbox" id="input-[2.9.1]-3" /> Label 1</label>
</div>
<div class="k-form-group">
    <label><input type="radio" id="input-[2.9.1]-3" /> Label 2</label>
</div>

Styleguide 2.9.1

*/

/**
 * Shared styling between radio boxes and checkboxes
 */

@include modernizr('.k-appearance.k-checked') {
  input[type="checkbox"],
  input[type="radio"] {

    /**
     * 1. Resetting the default styling used by browsers. Don't do this for -moz-
          because the checkbox and radio box will look very ugly
     * 2. Positioning relative to position psuedo before element nicely
     * 5. Indicate that element is clickable
     */

    -webkit-appearance: none; /* 1 */
    /* -moz-appearance: don't set this; /* 1 */
    position: relative; /* 2 */
    height: $form-option-size;
    width: $form-option-size;
    margin: 0 .33em 0 0;
    border: $form-option-border-size solid $form-option-border;
    padding: 0;
    background: $form-option-background;
    display: inline-block;
    vertical-align: middle;
    cursor: pointer; /* 5 */
    box-shadow: $form-option-shadow;
    @include transition(background);


    /* Hover to indicate element is clickable */

    &:hover {
      background: #f1f1f1;
    }


    /* Set disabled border color a bit lighter so it won't appear to be larger */

    &:disabled {
      border-color: #bbb;
    }


    /**
     * 1. Position psuedo element absolute to have full control
     * 2. Position top-left, margin, width and height will take care of centering
     * 3. Initially hide the psuedo element
     * 4. Show the psuedo element when item is checked
     */

    &:before {
      position: absolute; /* 1 */
      top: 0; /* 2 */
      left: 0; /* 2 */
      visibility: hidden; /* 3 */
      transform: scale(0,0); /* 3 */
      text-align: center;
      vertical-align: middle;
      background: transparent;
      @include transition;
    }

    &:checked:before {
      visibility: visible; /* 4 */
      transform: scale(1,1); /* 4 */
    }
  }


  /* Put some space between the second box and the first label */

  label {

    /**
     * <input id="example1" />
     * <label for="example1">Label 1</label>
     * <input id="example2" />
     * <label for="example2">Label 2</label>
     */

    & + input[type="checkbox"],
    & + input[type="radio"] {
      margin-left: 1em;
    }


    /**
     * <label><input id="example3" /> Label 1</label>
     * <label><input id="example4" /> Label 2</label>
     */

    & + label {
      margin-left: 1em;
    }
  }
}


/* RTL */

@include modernizr-rtl('.k-appearance.k-checked') {
  input[type="checkbox"],
  input[type="radio"] {
    margin: 0 0 0 .33em;

    &:before {
      left: auto;
      right: 0;
    }
  }

  label {

    & + input[type="checkbox"],
    & + input[type="radio"] {
      margin-left: auto;
      margin-right: 1em;
    }

    & + label {
      margin-left: auto;
      margin-right: 1em;
    }
  }
}


/**
 * Checkbox
 *
 * 1. Remove rounded corners by default
 * 2. Display a check icon in the psuedo before element
 * 3. Height of the box minus the border size
 * 4. Height of the psuedo element minus a 1px padding/margin to move icon
      away from the side of the box
 * 5. Set the color of the check icon
 */

@include modernizr('.k-appearance.k-checked') {
  input[type="checkbox"] {
    border-radius: 0; /* 1 */

    @include icon-before(check, true) {
      /* 2 */
      width: $form-option-size - ($form-option-border-size * 2); /* 3 */
      height: $form-option-size - ($form-option-border-size * 2); /* 3 */
      line-height: $form-option-size - ($form-option-border-size * 2); /* 3 */
      font-size: $form-option-size - ($form-option-border-size * 4); /* 4 */
      color: $color-accent; /* 5 */
    }
  }
}


/**
 * Radio
 *
 * 1. Making the radio box round
 * 2. Adding content to display the psuedo element
 * 3. Small inner circle, scaling with the box itself
 * 4. positioning the inner circle
 * 5. Making inner circle actually round
 */

@include modernizr('.k-appearance.k-checked') {
  input[type="radio"] {
    border-radius: 50%; /* 1 */

    &:before {
      content: " "; /* 2 */
      width: $form-option-size - ($form-option-border-size * 8); /* 3 */
      height: $form-option-size - ($form-option-border-size * 8); /* 3 */
      margin: 3px; /* 4 */
      background: $form-option-color;
      border-radius: 50%; /* 5 */
    }
  }
}


/*
Feedback states

.k-has-success - Success
.k-has-warning - Warning
.k-has-error - Error

markup:
<div class="k-form-group {$modifiers}">
    <label for="input-[2.9.2]-1-{$modifiers}">Default input</label>
    <input class="k-form-control" type="text" id="input-[2.9.2]-1-{$modifiers}" />
</div>

Styleguide 2.9.2

*/

.k-has-success {
  @include form-control-validation($state-success-color, $state-success-color, $state-success-background);
}
.k-has-warning {
  @include form-control-validation($state-warning-color, $state-warning-color, $state-warning-background);
}
.k-has-error {
  @include form-control-validation($state-danger-color, $state-danger-color, $state-danger-background);
}


/*
Static form label

Styled like a `<label>`

markup:
<p class="k-static-form-label">Static form control</p>

Styleguide 2.9.3

*/

/**
 * Static form control text
 *
 * Apply class to a `p` element to make any string of text align with labels in
 * a horizontal form layout.
 *
 * 1. Size it appropriately next to real form controls
 * 2. Remove default margin from `p`
 */

.k-static-form-label {
  display: inline-block;
  vertical-align: middle;
  max-width: 100%; /* 1 */
  font-weight: bold;
  @include content-block(5px);
}


/*
Input group

default - Default
.k-input-group--small - Small
.k-input-group--large - Large

markup:
<div class="k-input-group {$modifiers}">
    <div class="k-input-group__addon">Addon</div>
    <input type="text" class="k-form-control" />
    <div class="k-input-group__button">
        <button type="button" class="k-button k-button--default">Button</button>
    </div>
</div>

Styleguide 2.9.4

*/

/**
 * 1. For dropdowns
 * 2. Prevent input groups from inheriting border styles from table cells when placed within a table
 * 3. Ensure that the input is always above the *appended* addon button for proper border colors.
 * 4. IE9 fubars the placeholder attribute in text inputs and the arrows on
      select elements in input groups. To fix it, we float the input.
 * 5. Put focused element on top of the rest
 */

.k-input-group {
  position: relative; /* 1 */
  display: table;
  width: 100%;
  border-collapse: separate; /* 2 */

  .k-form-control {

    /* 3 */
    position: relative;
    z-index: 2;

    /* 4 */
    float: left;

    width: 100%;
    margin-bottom: 0;

    &:focus {
      z-index: 3; /* 5 */
    }
  }
}


/* Sizes */

.k-input-group--large {
  & > .k-form-control,
  & > .select2-container--bootstrap .select2-selection--single,
  & > .k-input-group__addon,
  & > .k-input-group__button > .k-button {
    height: $input-height-large;
    padding: $spacing-large-vertical $spacing-large-horizontal;
    font-size: $font-size-large;
    line-height: $line-height-large;
    border-radius: $border-radius-large;
  }

  & > .select2-container--bootstrap .select2-selection--single .select2-selection--rendered {
    line-height: $line-height-large;
  }

  select.k-form-control {
    height: $input-height-large;
    line-height: $input-height-large;
  }

  textarea.k-form-control,
  select[multiple].k-form-control {
    height: auto;
  }
}

.k-input-group--small {
  & > .k-form-control,
  & > .select2-container--bootstrap .select2-selection--single,
  & > .k-input-group__addon,
  & > .k-input-group__button > .k-button {
    height: $input-height-small;
    padding: $spacing-small-vertical $spacing-small-horizontal;
    font-size: $font-size-small;
    line-height: $line-height-small;
    border-radius: $border-radius-small;
  }

  & > .select2-container--bootstrap .select2-selection--single .select2-selection--rendered {
    line-height: $line-height-small;
  }

  select.k-form-control {
    height: $input-height-small;
    line-height: $input-height-small;
  }

  textarea.k-form-control,
  select[multiple].k-form-control {
    height: auto;
  }
}

/* Input group parts */

.k-input-group__addon,
.k-input-group__button,
.k-input-group .k-form-control {
  display: table-cell;

  &:not(:first-child):not(:last-child) {
    border-radius: 0;
  }
}

.k-input-group .select2-container {
  &:not(:first-child):not(:last-child) {
    .select2-selection--single {
      border-radius: 0;
    }
  }

  &.select2-container--open,
  &.select2-container--focus {
    z-index: 3;
  }
}


/**
 * Addon and addon wrapper for buttons
 *
 * 1. Match the inputs
 */

.k-input-group__addon,
.k-input-group__button {
  width: 1%;
  white-space: nowrap;
  vertical-align: middle; /* 1 */
}


/* Text addon */

.k-input-group__addon {
  font-size: $font-size;
  line-height: $line-height;
  height: $input-height-base;
  padding: $spacing-base-vertical $spacing-base-horizontal;
  font-weight: normal;
  color: $input-color;
  text-align: center;
  background-color: $input-group-addon-bg;
  border: 1px solid $input-group-addon-border-color;
  border-radius: $input-border-radius;


  /* Nuke default margins from checkboxes and radios to vertically center within. */

  input[type="radio"],
  input[type="checkbox"] {
    margin-top: 0;
  }
}


/* Reset rounded corners */
.k-input-group .k-form-control:first-child,
.k-input-group__addon:first-child,
.k-input-group__button:first-child > .k-button,
.k-input-group__button:first-child > .k-button-group > .k-button,
.k-input-group__button:first-child > .k-dropdown__toggle,
.k-input-group__button:last-child > .k-button:not(:last-child):not(.k-dropdown__toggle),
.k-input-group__button:last-child > .k-button-group:not(:last-child) > .k-button {
  @include border-right-radius(0);
}

.k-input-group__addon:first-child {
  border-right: 0;
}

.k-input-group .k-form-control:last-child,
.k-input-group__addon:last-child,
.k-input-group__button:last-child > .k-button,
.k-input-group__button:last-child > .k-button-group > .k-button,
.k-input-group__button:last-child > .k-dropdown__toggle,
.k-input-group__button:first-child > .k-button:not(:first-child),
.k-input-group__button:first-child > .k-button-group:not(:first-child) > .k-button {
  @include border-left-radius(0);
}

.k-input-group__addon:last-child {
  border-left: 0;
}


/**
 * Button input groups
 *
 * 1. Jankily prevent input button groups from wrapping with `white-space` and
      `font-size` in combination with `inline-block` on buttons.
 * 2. Negative margin for spacing, position for bringing hovered/focused/actived
      element above the siblings.
 * 3. Bring the "active" button to the front
 * 4. Negative margin to only have a 1px border between the two
 */

.k-input-group__button {
  position: relative;

  /* 1 */
  font-size: 0;
  white-space: nowrap;

  /* 2 */
  > .k-button {
    position: relative;
    font-size: $font-size;

    + .k-button {
      margin-left: -1px;
    }

    /* 3 */
    &:hover,
    &:focus,
    &:active {
      z-index: 2;
    }
  }

  /* 4 */
  &:first-child {
    > .k-button,
    > .k-button-group {
      margin-right: -1px;
    }
  }

  &:last-child {
    > .k-button,
    > .k-button-group {
      z-index: 2;
      margin-left: -1px;
    }
  }
}


/*
Form groups

default - Default
.k-form-group--small - Small form groups
.k-form-group--large - Large form groups

markup:
<div class="k-form-group {$modifiers}">
    <label for="input-[2.9]-1-{$modifiers}">Label</label>
    <input class="k-form-control" type="text" id="input-[2.9]-1-{$modifiers}" />
</div>

Styleguide 2.9.5

*/

/**
 * Designed to help with the organization and spacing of vertical forms. For
 * horizontal forms, use the predefined grid classes.
 */

.k-form-group {
  margin: 0;
  @include content-block;
}


/**
 * Form control sizing
 *
 * Build on `.k-form-control` with modifier classes to decrease or increase the
 * height and font-size of form controls.
 *
 * The `.k-form-group-* k-form-control` variations are sadly duplicated to avoid the
 * issue documented in https://github.com/twbs/bootstrap/issues/15074.
 */

.k-form-group--small {
  .k-form-control {
    font-size: $font-size-small;
    height: $input-height-small;
    padding: $spacing-small-vertical $spacing-small-horizontal;
    line-height: $line-height-small;
    border-radius: $border-radius-small;
  }

  select.k-form-control {
    height: $input-height-small;
    line-height: $input-height-small;
  }

  textarea.k-form-control,
  select[multiple].k-form-control {
    height: auto;
  }
}

.k-form-group--large {
  .k-form-control {
    font-size: $font-size-large;
    height: $input-height-large;
    padding: $spacing-large-vertical $spacing-large-horizontal;
    line-height: $line-height-large;
    border-radius: $border-radius-large;
  }

  select.k-form-control {
    height: $input-height-large;
    line-height: $input-height-large;
  }

  textarea.k-form-control,
  select[multiple].k-form-control {
    height: auto;
  }
}


/*
Inline form group

markup:
<div class="k-inline-form-group">
    <label for="input-[2.9.6.1]-1">Label</label>
    <input class="k-form-control" type="text" id="input-[2.9.6.1]-1" />
</div><!-- .k-inline-form-group -->

sg-wrapper:
<div class="k-form-group">
    <sg-wrapper-content/>
    <sg-wrapper-content/>
    <sg-wrapper-content/>
</div><!-- .k-form-group -->

Styleguide 2.9.6

*/

/*
Inline form group with buttons

markup:
<div class="k-inline-form-group">
    <p class="k-static-form-label">Label 1</p>
    <div class="k-button-group">
        <button type="button" class="k-button k-button--default k-button--tiny">
            <sg-insert>2.12-171</sg-insert>
            <span class="k-visually-hidden">Plus icon</span>
        </a>
        <button type="button" class="k-button k-button--default k-button--tiny">
            <sg-insert>2.12-158</sg-insert>
            <span class="k-visually-hidden">Minus icon</span>
        </a>
    </div>
</div><!-- .k-inline-form-group -->

Styleguide 2.9.6.1

*/


.k-inline-form-group {
  display: inline-block;
  margin-right: 1em;

  &:last-child {
    margin-right: 0;
  }

  @include rtl {
    margin-right: 0;
    margin-left: 1em;

    &:last-child {
      margin-left: 0;
      margin-right: 1em;
    }
  }

  .k-input-group,
  .k-button-group {
    display: block;
  }
}


/*
Form row group

markup:
<div class="k-form-row-group">
    <sg-insert>2.9.8</sg-insert>
    <sg-insert>2.9.8</sg-insert>
    <sg-insert>2.9.8</sg-insert>
</div>

Styleguide 2.9.7

*/

.k-form-row-group {
  background: #fff;
  border-radius: 5px;
  border: 1px solid #ccc;
  margin-bottom: $spacing;
}



/*
Form row

markup:
<form class="k-form-row">
    <div class="k-form-row__item k-form-row__item--button">
        <button class="k-button k-button--default k-button--small">
            <span class="k-icon-minus k-icon--error" aria-hidden="true"></span>
            <span class="k-visually-hidden">Remove</span>
        </button>
    </div>
    <div class="k-form-row__item k-form-row__item--label">
        <label for="input-[2.9.8]-1">File name:</label>
    </div>
    <div class="k-form-row__item k-form-row__item--input">
        <input class="k-form-control" type="text" value="{value}" disabled="" id="input-[2.9.8]-1" />
    </div>
    <div class="k-form-row__item k-form-row__item--label">
        <label for="input-[2.9.8]-2">Title:</label>
    </div>
    <div class="k-form-row__item k-form-row__item--input">
        <input class="k-form-control" type="text" name="title" value="{value}" id="input-[2.9.8]-2" />
    </div>
</form>

Styleguide 2.9.8

*/

.k-form-row {
  margin: 0;
  border-bottom: 1px solid #ccc;
  padding-bottom: 10px;

  @include breakpoint($beta) {
    display: table;
    width: 100%;
    padding-bottom: 0;

    @include rtl {
      direction: rtl;
    }

    &:last-child {
      border-bottom: none;
    }
  }

  .k-form-row__item {
    padding: 10px 10px 0 10px;
    border-right: 1px solid #ccc;

    @include rtl {
      border-right: none;
      border-left: 1px solid #ccc;
    }

    @include breakpoint($beta) {
      display: table-cell;
      vertical-align: middle;
      padding: 10px;
    }

    &:last-child {
      border-right: none;

      @include rtl {
        border-left: none;
      }
    }
  }

  .k-form-row__item--button,
  .k-form-row__item--label {
    width: 1%;
    white-space: nowrap;
  }

  .k-form-row__item--label {
    border-right: none;
    padding-right: 0;

    @include rtl {
      border-left: none;
      padding-right: 10px;
      padding-left: 0;
    }
  }

  .k-form-row__item--input {
    @include breakpoint($beta) {
      padding: 5px;
    }
  }

  .k-form-control {
    margin: 0;
  }

  .k-form-row__message {
    a {
      display: block;
      padding: 10px;

      &:focus,
      &:hover {
        background: #eee;
      }
    }
  }

  &:first-child {
    .k-form-row__message {
      a {
        border-radius: 5px 5px 0 0;
      }
    }
  }

  &:last-child {
    .k-form-row__message {
      a {
        border-radius: 0 0 5px 5px;
      }
    }
  }
}



/*
Styled file input

markup:
<div class="k-file-input-container">
    <div class="k-file-input">
        <input class="k-js-file-input" type="file" id="input-[5.1]-2" data-multiple-caption="{count} files selected" multiple />
        <label for="input-[5.1]-2">
            <span class="k-file-input__button">
                <sg-insert>2.12-62</sg-insert>
                Choose a file&hellip;
            </span>
            <span class="k-file-input__files"></span>
        </label>
    </div>
</div>

Styleguide 2.9.9

*/

.k-file-input {
  position: relative;
  display: inline-block;

  /* The original file input select */

  input {

    /**
     * 1. Style only when JS is enabled / addEventlistener is available
     *    We want to show it regularly when we don't have addEventListener for usability sake
     * 2. Hide the label by default and only show it when addEventListener is available (e.g. when file input is hidden)
     * 3. Display label when file input is hidden
     */

    @include modernizr('.k-eventlistener') {
      @include coverall($left: false);
      margin: 0;
      padding: 0;
      cursor: pointer;
      font-size: 99px;
      opacity: 0;
      filter: alpha(opacity=0);
    }

    + label {
      display: none; /* 2 */

      @include modernizr('.k-eventlistener') {
        display: inline-block; /* 3 */
      }
    }


    /* Styling the label, holding both the button and the selected files container */

    + label {
      max-width: 100%;
      font-size: $font-size;
      line-height: $line-height;
      font-weight: $regular;
      text-overflow: ellipsis;
      white-space: nowrap;
      cursor: pointer;
      overflow: hidden;
      vertical-align: middle;
      color: $color-accent;
      padding: 0;
      text-align: center;
    }


    /* Focus state */

    &:focus,
    &.has-focus {
      outline: none;

      & + label {
        outline: 1px dotted #000;
        outline: -webkit-focus-ring-color auto 5px;
      }
    }


    /* Hover / focus state */

    &:focus,
    &.has-focus,
    &.has-drop-focus,
    &:hover{
      cursor: pointer;

      & + label {
        .k-file-input__button {
          &, &:hover, &:focus {
            background-color: darken($color-accent, 10%);
          }
        }
      }
    }
  }


  /* The button */

  .k-file-input__button {
    display: block;
    background-color: $color-accent;
    color: $color-accent-type;
    height: $input-height-large;
    pointer-events: none;
    vertical-align: middle;
    font-weight: $regular;
    text-align: center;
    touch-action: manipulation;
    cursor: pointer;
    background-image: none; /* 2 */
    border: 1px solid transparent;
    white-space: nowrap;
    box-shadow: none;
    text-shadow: none;
    user-select: none;
    margin-bottom: 0;
    border-radius: $border-radius-large;
    font-size: $font-size-large;
    line-height: $line-height-large;
    padding: $spacing-large-vertical $spacing-large-horizontal;
  }


  /* Selected files container */

  .k-file-input__files {
    width: 100%;
    height: $line-height;
    line-height: $line-height;
    display: inline-block;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    vertical-align: top;
    text-align: center;

    &:empty {
      display: none;
    }
  }
}
