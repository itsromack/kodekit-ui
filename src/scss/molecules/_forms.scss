/*
Forms

To be used in sidebar of forms<br />
Data in these boxes should be non-required form elements

.k-form-group - Default
.k-form-group-small - Small form groups
.k-form-group-large - Large form groups

markup:
<div class="{$modifiers}">
    <label for="input{$modifiers}">Label</label>
    <input class="k-form-control" type="text" id="input{$modifiers}">
</div>

Styleguide 2.13

*/


/*
Form controls

markup:
<div class="k-form-group">
    <label for="form-input1">Default input</label>
    <input class="k-form-control" type="text" id="form-input1">
</div>
<div class="k-form-group">
    <label for="form-select1">Select</label>
    <select class="k-form-control" id="form-select1">
        <option>Option</option>
    </select>
</div>
<div class="k-form-group">
    <label for="form-textarea1">Textarea</label>
    <textarea class="k-form-control" id="form-textarea1"></textarea>
</div>

Styleguide 2.13.5

*/

/**
 * Common form controls
 * Shared size and type resets for form controls. Apply `.k-form-control` to any
 * of the following form controls:
 *
 * select
 * textarea
 * input[type="text"]
 * input[type="password"]
 * input[type="datetime"]
 * input[type="datetime-local"]
 * input[type="date"]
 * input[type="month"]
 * input[type="time"]
 * input[type="week"]
 * input[type="number"]
 * input[type="email"]
 * input[type="url"]
 * input[type="search"]
 * input[type="tel"]
 * input[type="color"]
 *
 * 1. Make inputs at least the height of their button counterpart (base line-height + padding + border)
 * 2. Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
 * 3. Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
 * 4. Customize the `:focus` state to imitate native WebKit styles.
 * 5. Unstyle the caret on `<select>`s in IE10+.
 * 6. iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
 */

.k-form-control {
  display: block;
  width: 100%;
  height: $input-height-base; /* 1 */
  padding: $padding-base-vertical $padding-base-horizontal;
  font-size: 16px;
  line-height: $line-height-base;
  color: $input-color;
  background-color: $input-bg;
  background-image: none; /* 2 */
  border: 1px solid $input-border;
  border-radius: $input-border-radius; /* 3 */
  box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
  transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;


  /* 4 */

  @include form-control-focus;


  /* Placeholders */

  &::-moz-placeholder {
    color: $input-color-placeholder;
    opacity: 1;
  }

  &:-ms-input-placeholder {
    color: $input-color-placeholder;
  }

  &::-webkit-input-placeholder  {
    color: $input-color-placeholder;
  }

  /* 5 */
  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }


  /* Disabled and read-only inputs */

  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: $input-bg-disabled;
    opacity: 1; /* 6 */
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
}


/* Reset height for `textarea`s */

textarea.k-form-control {
  height: auto;
}


/**
 * Search inputs in iOS
 *
 * This overrides the extra rounded corners on search inputs in iOS so that our
 * `.k-form-control` class can properly style them. Note that this cannot simply
 * be added to `.k-form-control` as it's not specific enough. For details, see
 * https://github.com/twbs/bootstrap/issues/11586.
 */

input[type="search"] {
  -webkit-appearance: none;
}


/**
 * Special styles for iOS temporal inputs
 *
 * In Mobile Safari, setting `display: block` on temporal inputs causes the
 * text within the input to become vertically misaligned. As a workaround, we
 * set a pixel line-height that matches the given height of the input, but only
 * for Safari. See https://bugs.webkit.org/show_bug.cgi?id=139848
 *
 * Note that as of 8.3, iOS doesn't support `datetime` or `week`.
 */

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type="date"],
  input[type="time"],
  input[type="datetime-local"],
  input[type="month"] {
    &.k-form-control {
      line-height: $input-height-base;
    }

    .k-input-group--small & {
      line-height: $input-height-small;
    }

    .k-input-group--large & {
      line-height: $input-height-large;
    }
  }
}


/**
 * Form groups
 *
 * Designed to help with the organization and spacing of vertical forms. For
 * horizontal forms, use the predefined grid classes.
 */

.k-form-group {
  margin: 0 0 $spacing 0;

  &:last-child {
    margin-bottom: 0;
  }
}



/*
Checkbox & Radio inputs

CSS only styled checkboxes and radio boxes

markup:
<input type="checkbox" id="input1">
<label for="input1">Label 1</label>
<input type="radio" id="input2">
<label for="input2">Label 2</label>
<!-- Or -->
<label><input type="checkbox" id="input1"> Label 1</label>
<label><input type="radio" id="input2"> Label 2</label>

sg-wrapper:
<div class="k-form-group">
    <sg-wrapper-content/>
</div>

Styleguide 2.13.4

*/

/**
 * Shared styling between radio boxes and checkboxes
 */

@include modernizr('.k-appearance.k-checked') {
  input[type="checkbox"],
  input[type="radio"] {

    /**
     * 1. Resetting the default styling used by browsers. Don't do this for -moz-
          because the checkbox and radio box will look very ugly
     * 2. Positioning relative to position psuedo before element nicely
     * 3. Vertically positioning next to text
     * 4. Aligning vertically next to labels
     * 5. Indicate that element is clickable
     */

    -webkit-appearance: none; /* 1 */
    /* -moz-appearance: don't set this; /* 1 */
    position: relative; /* 2 */
    height: $form-option-size;
    width: $form-option-size;
    margin-top: -1px; /* 3 */
    margin-bottom: 2px; /* 3 */
    margin-left: 0;
    margin-right: .33em;
    border: $form-option-border-size solid $form-option-border;
    padding: 0;
    background: $form-option-background;
    display: inline-block;
    vertical-align: middle;
    cursor: pointer; /* 5 */
    box-shadow: $form-option-shadow;
    @include transition(background);

    /* Hover to indicate element is clickable */

    &:hover {
      background: #f1f1f1;
    }

    /* Set disabled border color a bit lighter so it won't appear to be larger */

    &:disabled {
      border-color: #bbb;
    }

    /**
     * 1. Position psuedo element absolute to have full control
     * 2. Position top-left, margin, width and height will take care of centering
     * 3. Initially hide the psuedo element
     * 4. Show the psuedo element when item is checked
     */

    &:before {
      position: absolute; /* 1 */
      top: 0; /* 2 */
      left: 0; /* 2 */
      visibility: hidden; /* 3 */
      transform: scale(0,0); /* 3 */
      text-align: center;
      vertical-align: middle;
      background: transparent;
      @include transition;
    }

    &:checked:before {
      visibility: visible; /* 4 */
      transform: scale(1,1); /* 4 */
    }

  }

  /* Put some space between the box and the label */
  label {

    /**
     * <input id="input1">
     * <label for="input1">Label 1</label>
     * <input id="input2">
     * <label for="input2">Label 2</label>
     */

    & + input[type="checkbox"],
    & + input[type="radio"] {
      margin-left: 1em;
    }

    /**
     * <label><input id="input1"> Label 1</label>
     * <label><input id="input2"> Label 2</label>
     */

    & + label {
      margin-left: 1em;
    }
  }
}


/* RTL */

@include modernizr-rtl('.k-appearance.k-checked') {
  input[type="checkbox"],
  input[type="radio"] {
    margin-left: .33em;
    margin-right: 0;

    &:before {
      left: auto;
      right: 0;
    }
  }

  label {

    & + input[type="checkbox"],
    & + input[type="radio"] {
      margin-left: auto;
      margin-right: 1em;
    }

    & + label {
      margin-left: auto;
      margin-right: 1em;
    }
  }
}



/* ==========================================================================
   CSS only styled checkbox
   ========================================================================== */

/**
 * 1. Remove rounded corners by default
 * 2. Display a check icon in the psuedo before element
 * 3. Height of the box minus the border size
 * 4. Height of the psuedo element minus a 1px padding/margin to move icon
      away from the side of the box
 * 5. Set the color of the check icon
 */

@include modernizr('.k-appearance.k-checked') {
  input[type="checkbox"] {
    border-radius: 0; /* 1 */

    @include icon-before(check, true) {
      /* 2 */
      width: $form-option-size - ($form-option-border-size * 2); /* 3 */
      height: $form-option-size - ($form-option-border-size * 2); /* 3 */
      line-height: $form-option-size - ($form-option-border-size * 2); /* 3 */
      font-size: $form-option-size - ($form-option-border-size * 4); /* 4 */
      color: $color-accent; /* 5 */
    }
  }
}



/* ==========================================================================
   CSS only styled radio box
   ========================================================================== */

/**
 * 1. Making the radio box round
 * 2. Adding content to display the psuedo element
 * 3. Small inner circle, scaling with the box itself
 * 4. positioning the inner circle
 * 5. Making inner circle actually round
 */

@include modernizr('.k-appearance.k-checked') {
  input[type="radio"] {
    border-radius: 50%; /* 1 */

    &:before {
      content: " "; /* 2 */
      width: $form-option-size - ($form-option-border-size * 8); /* 3 */
      height: $form-option-size - ($form-option-border-size * 8); /* 3 */
      margin: 3px; /* 4 */
      background: $form-option-color;
      border-radius: 50%; /* 5 */
    }
  }
}


/*
Static form label

Styled like a `<label>`

markup:
<p class="k-static-form-label">Static form control</p>

Styleguide 2.13.6

*/

/**
 * Static form control text
 *
 * Apply class to a `p` element to make any string of text align with labels in
 * a horizontal form layout.
 *
 * 1. Size it appropriately next to real form controls
 * 2. Remove default margin from `p`
 */

.k-static-form-label {
  display: inline-block;
  vertical-align: middle;
  max-width: 100%; /* 1 */
  margin-bottom: 5px;
  font-weight: bold;

  &:last-child {
    margin-bottom: 0;
  }
}


/**
 * Form control sizing
 *
 * Build on `.k-form-control` with modifier classes to decrease or increase the
 * height and font-size of form controls.
 *
 * The `.k-form-group-* k-form-control` variations are sadly duplicated to avoid the
 * issue documented in https://github.com/twbs/bootstrap/issues/15074.
 */

@include input-size('.input-sm', $input-height-small, $padding-small-vertical, $padding-small-horizontal, 16px, $line-height-small, $input-border-radius-small);
.k-form-group-small {
  .k-form-control {
    height: $input-height-small;
    padding: $padding-small-vertical $padding-small-horizontal;
    font-size: $font-size-small;
    line-height: $line-height-small;
    border-radius: $input-border-radius-small;
  }

  select.k-form-control {
    height: $input-height-small;
    line-height: $input-height-small;
  }

  textarea.k-form-control,
  select[multiple].k-form-control {
    height: auto;
  }
}

@include input-size('.input-lg', $input-height-large, $padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $input-border-radius-large);
.k-form-group-large {
  .k-form-control {
    height: $input-height-large;
    padding: $padding-large-vertical $padding-large-horizontal;
    font-size: $font-size-large;
    line-height: $line-height-large;
    border-radius: $input-border-radius-large;
  }

  select.k-form-control {
    height: $input-height-large;
    line-height: $input-height-large;
  }

  textarea.k-form-control,
  select[multiple].k-form-control {
    height: auto;
  }
}


/*
Feedback states

Feedback states

.k-has-success - Success
.k-has-warning - Warning
.k-has-error - Error

markup:
<div class="k-form-group {$modifiers}">
    <label for="form-input1">Default input</label>
    <input class="k-form-control" type="text" id="form-input1">
</div>

Styleguide 2.13.7

*/

.k-has-success {
  @include form-control-validation($state-success-text, $state-success-text, $state-success-bg);
}
.k-has-warning {
  @include form-control-validation($state-warning-text, $state-warning-text, $state-warning-bg);
}
.k-has-error {
  @include form-control-validation($state-danger-text, $state-danger-text, $state-danger-bg);
}



/*
Inline form group

Inline form groups

markup:
<p class="k-static-form-label">Select from presets</p>
<div class="k-form-group">
    <div class="k-inline-form-group">
        <label>Label 1</label>
        <div class="k-button-group">
            <a href="#" class="k-button k-button--default k-button--tiny">
                <span class="k-icon-plus"></span>
            </a>
            <a href="#" class="k-button k-button--default k-button--tiny">
                <span class="k-icon-minus"></span>
            </a>
        </div>
    </div>
    <div class="k-inline-form-group">
        <label>Label 2</label>
        <div class="k-button-group">
            <a href="#" class="k-button k-button--default k-button--tiny">
                <span class="k-icon-plus"></span>
            </a>
            <a href="#" class="k-button k-button--default k-button--tiny">
                <span class="k-icon-minus"></span>
            </a>
        </div>
    </div>
    <div class="k-inline-form-group">
        <label>Label 3</label>
        <div class="k-button-group">
            <a href="#" class="k-button k-button--default k-button--tiny">
                <span class="k-icon-plus"></span>
            </a>
            <a href="#" class="k-button k-button--default k-button--tiny">
                <span class="k-icon-minus"></span>
            </a>
        </div>
    </div>
</div>

Styleguide 2.13.1

*/


.k-inline-form-group {
  display: inline-block;
  margin-right: 1em;

  &:last-child {
    margin-right: 0;
  }

  @include rtl {
    margin-right: 0;
    margin-left: 1em;

    &:last-child {
      margin-left: 0;
      margin-right: 1em;
    }
  }

  label {
    font-weight: $regular;
  }

  .k-input-group,
  .k-button-group {
    display: block;
  }
}


/*
Form row group

Form row group

markup:
<div class="k-form-row-group">
    <sg-insert>2.13.3</sg-insert>
    <sg-insert>2.13.3</sg-insert>
    <sg-insert>2.13.3</sg-insert>
</div>

Styleguide 2.13.2

*/

.k-form-row-group {
  background: #fff;
  border-radius: 5px;
  border: 1px solid #ccc;
  margin-bottom: $spacing;
}



/*
Form row

Form row

markup:
<form class="k-form-row">
    <div class="k-form-row__item k-form-row__item--button">
        <button class="k-button k-button--default k-button--small">
            <span class="k-icon-minus k-icon-error"></span>
        </button>
    </div>
    <div class="k-form-row__item k-form-row__item--label">
        <label>File name:</label>
    </div>
    <div class="k-form-row__item k-form-row__item--input">
        <input class="k-form-control" type="text" value="{value}" disabled="">
    </div>
    <div class="k-form-row__item k-form-row__item--label">
        <label for="docman_title0">Title:</label>
    </div>
    <div class="k-form-row__item k-form-row__item--input">
        <input id="docman_title0" class="k-form-control" type="text" name="title" value="{value}">
    </div>
</form>

Styleguide 2.13.3

*/

.k-form-row {
  margin: 0;
  border-bottom: 1px solid #ccc;
  padding-bottom: 10px;

  @include breakpoint($beta) {
    display: table;
    width: 100%;
    padding-bottom: 0;

    @include rtl {
      direction: rtl;
    }

    &:last-child {
      border-bottom: none;
    }
  }

  .k-form-row__item {
    padding: 10px 10px 0 10px;
    border-right: 1px solid #ccc;

    @include rtl {
      border-right: none;
      border-left: 1px solid #ccc;
    }

    @include breakpoint($beta) {
      display: table-cell;
      vertical-align: middle;
      padding: 10px;
    }

    &:last-child {
      border-right: none;

      @include rtl {
        border-left: none;
      }
    }
  }

  .k-form-row__item--button,
  .k-form-row__item--label {
    width: 1%;
    white-space: nowrap;
  }

  .k-form-row__item--label {
    border-right: none;
    padding-right: 0;

    @include rtl {
      border-left: none;
      padding-right: 10px;
      padding-left: 0;
    }
  }

  .k-form-row__item--input {
    @include breakpoint($beta) {
      padding: 5px;
    }
  }

  .k-form-control {
    margin: 0;
  }

  .k-form-row__message {
    a {
      display: block;
      padding: 10px;

      &:focus,
      &:hover {
        background: #eee;
      }
    }
  }

  &:first-child {
    .k-form-row__message {
      a {
        border-radius: 5px 5px 0 0;
      }
    }
  }

  &:last-child {
    .k-form-row__message {
      a {
        border-radius: 0 0 5px 5px;
      }
    }
  }
}