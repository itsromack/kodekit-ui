@if ($k-molecules == true and $k-molecule-table != false) or $k-molecule-table == true {

  /* Table
     ========================================================================== */

  /* WARNING: Do not use transition on any element since this will hit scroll performance big on certain browsers! */

  .k-table-container {
    background: $k-table-background;
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    overflow: hidden;

    @include resizing {
      overflow: hidden;
    }
  }

  /**
   * Table
   *
   * 1. Should be as tall as possible for dropdown overflows. Pushes the pagination to the bottom
   */

  .k-table {
    overflow: auto;
    backface-visibility: hidden;
    will-change: overflow;
    flex: 1 1 auto; /* 1 */
  }

  /**
   * Default table settings
   *
   * 1. override browser default
   */

  .k-table-container {
    table {
      margin: 0;
      padding: 0;
      width: 100%;
      text-align: left;
      border-collapse: separate;
      border-spacing: 0;
      font-size: inherit; /* 1 */
      min-width: 0 !important;
      flex: 1 1 auto;

      @include rtl {
        text-align: right;
      }
    }

    /**
     * Cells
     *
     * 1. Position checkbox
     * 2. Remove default margin
     */

    th,
    td {
      border: none;
      position: relative;
      height: $k-table-cell-size;
      vertical-align: $k-table-cell-vertical-align;
      text-align: $k-table-cell-align;
      line-height: 1;

      input {
        display: inline-block; /* 1 */
        vertical-align: middle; /* 1 */
        margin: 0; /* 2 */
      }
    }

    @include rtl {
      th,
      td {
        text-align: $k-table-cell-rtl-align;
      }
    }

    /**
     * Sticky header
     *
     * 1. Set top to 0 because there's no default yet
     * 2. Set z-index to 1 to make sure it covers the tbody
     */

    th {
      position: sticky;
      top: 0;
      z-index: 1;
    }

    /**
     * Head
     *
     * 1. Don't set a vertical padding on table headers. Set padding on table heading children
     *    We do this so <a> elements are fully clickable for sorting
     * 2. Don't use long header titles since they won't be wrapped
     * 3. Whole <th> should be clickable
     * 4. Set padding here
     */

    th {
      @include border(bottom, $k-table-header-border);
      z-index: 1;
      padding: 0 $k-table-cell-horizontal-spacing; /* 1 */
      white-space: nowrap; /* 2 */
      background: $k-table-header-background;
      font-weight: $k-table-header-font-weight;

      a {
        display: block; /* 3 */
        padding: $k-table-cell-vertical-spacing $k-table-cell-horizontal-spacing; /* 4 */
        margin-left: -($k-table-cell-horizontal-spacing);
        margin-right: -($k-table-cell-horizontal-spacing);
        line-height: $k-table-cell-size - ($k-table-cell-vertical-spacing * 2);
        text-decoration: none;

        &:focus,
        &:hover {
          background: $k-table-header-hover-background;
        }
      }

      /* Size icons accordingly */

      [class*="k-icon"] {
        font-size: $k-table-cell-icon-size;
        line-height: 1;
        vertical-align: middle;
      }
    }

    /**
     * Body
     *
     * 1. Small extra info below title display:block to display below title
     */

    td {
      @include border(bottom, $k-table-cell-border);
      padding: $k-table-cell-vertical-spacing $k-table-cell-horizontal-spacing;
      background: $k-table-cell-even-background;
    }

    tr:last-child {
      td {
        border-bottom: none;
      }
    }

    tr:nth-child(odd) {
      td {
        background: $k-table-cell-odd-background;
      }
    }

    /* Hover background */

    tr,
    tr:nth-child(n) {
      &:focus,
      &:hover {
        td {
          background: $k-table-cell-even-hover-background;
        }
      }
    }

    [class*="k-icon"] {
      display: inline-block;
    }

    a {
      color: inherit;
    }
  }


  /**
   * Table elements
   */

  .k-table-container {
    a {
      display: inline-block;
      vertical-align: middle;
      text-decoration: none;

      &:hover,
      &:focus {
        text-decoration: underline;
      }
    }

    small {
      display: block;
      font-size: $k-table-cell-small-font-size;
      line-height: $k-table-cell-small-line-height;
    }
  }

  /* Table cell settings */

  .k-table-container {
    .k-table-data--right {
      text-align: right;

      @include rtl {
        text-align: left;
      }
    }

    .k-table-data--center {
      text-align: center;
    }

    .k-table-data--nowrap {
      white-space: nowrap;
    }

    .k-table-data--wrap {
      word-break: break-all;
    }

    .k-table-data--toggle,
    .k-table-data--form,
    .k-table-data--icon {
      white-space: nowrap;
      line-height: 1;
      vertical-align: middle;

      a, span, input, svg, div, small, img {
        vertical-align: middle;
        line-height: 1;
      }

      [class*="k-icon"] {
        font-size: $k-table-cell-icon-size;
      }
    }

    .k-table-data--multiline {
      a, span, input, svg, small, img {
        display: inline;
        vertical-align: baseline;
      }

      /* Give anchors underlines to set them apart from default text */

      a {
        text-decoration: underline;

        &:hover,
        &:focus {
          text-decoration: none;
        }
      }
    }

    .k-table-data--toggle {
      padding: 0;
      font-size: 0;
      line-height: 0;
      overflow: hidden;
      width: 0;
      visibility: visible;
    }

    .k-table-data--toggle--hidden {
      padding: 0;

      span, div, img, a {
        display: none !important;
      }
    }

    .footable.breakpoint {
      .k-table-data--toggle {
        width: 1%;
        padding-left: $k-table-cell-horizontal-spacing;
        padding-right: $k-table-cell-horizontal-spacing;
      }
    }

    .k-table-data--form {
      input {
        margin: 0 !important;
      }
    }

    .k-table-data--icon {
      img {
        @include allwidth(16px);
      }
    }

    th.k-table-data--icon {
      a {
        line-height: $k-table-cell-size - ($k-table-cell-vertical-spacing * 2);
      }
    }

    .k-table-data--ellipsis {
      max-width: 0;
      overflow: hidden;

      a, span, input, svg, div, small {
        vertical-align: middle;
        max-width: 100%;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }
  }

  /* Table item states */

  .k-table-container {
    .k-table__item--state {

      /* pointers for clickable elements */

      button#{&},
      a#{&} {
        cursor: pointer;

        &:focus,
        &:hover {
          text-decoration: underline;
        }
      }

      &-pending {
        color: $k-table-item-pending-color;
      }

      &-expired {
        color: $k-table-item-expired-color;
      }

      &-unpublished {
        color: $k-table-item-unpublished-color;
      }

      &-published {
        color: $k-table-item-published-color;
      }
    }
  }

  /* Table sub header */

  .k-table-container {
    .k-table__sub-header {
      th {
        padding: $k-table-sub-header-spacing;
        height: auto;
        font-size: $k-table-sub-header-font-size;
        line-height: $k-table-sub-header-line-height;
        font-weight: $k-table-sub-header-font-weight;
        vertical-align: middle;
        text-transform: uppercase;
        white-space: nowrap;
        background: $k-table-sub-header-background;
        border-bottom-color: $k-table-sub-header-border;
        top: ($k-table-cell-size + $k-border-width);
      }
    }
  }

  /* Table levels */

  .k-table-container {
    .k-table__item-level {
      white-space: nowrap;

      &:before {
        content: " ";
        display: block;
        width: $k-table-item-level-size;
        height: $k-table-item-level-size;
        border-left: $k-table-item-level-border;
        border-bottom: $k-table-item-level-border;
        position: absolute;
        top: 50%;
        margin-top: -($k-table-item-level-size / 2);

        @include rtl {
          border-left: none;
          border-right: $k-table-item-level-border;
        }
      }
    }

    /* Set proper spacing before levels */

    @for $k-i from 1 through 15 {
      .k-table__item-level#{$k-i} {
        padding-left: $k-table-item-level-spacer * ($k-i - 1) + $k-table-cell-horizontal-spacing;

        @include rtl {
          padding-left: 0;
          padding-right: $k-table-item-level-spacer * ($k-i - 1) + $k-table-cell-horizontal-spacing;
        }

        &:before {
          left: ($k-table-item-level-spacer * ($k-i - 1)) - (18px - $k-table-cell-horizontal-spacing);

          @include rtl {
            left: auto;
            right: ($k-table-item-level-spacer * ($k-i - 1)) - (18px - $k-table-cell-horizontal-spacing);
          }
        }
      }
    }

    /* Do not display the level icon for the first level items */

    .k-table__item-level1:before {
      display: none;
    }

    /* Space icons away from text */

    .k-table__item-level__icon-item {
      position: relative;
      padding-left: $k-table-item-level-icon-size + $k-table-item-level-icon-spacing;

      @include rtl {
        padding-left: 0;
        padding-right: $k-table-item-level-icon-size + $k-table-item-level-icon-spacing;
      }

      [class*="k-icon"],
      [class*="k-image"] {
        position: absolute;
        left: 0;
      }

      @include rtl {
        [class*="k-icon"],
        [class*="k-image"] {
          left: auto;
          right: 0;
        }
      }

      [class*="k-icon"] {
        top: 50%;
        font-size: $k-table-item-level-icon-size;
        margin-top: -(round($k-table-item-level-icon-size / 2));
      }

      [class*="k-image"] {
        height: $k-table-item-level-icon-size;
        line-height: $k-table-item-level-icon-size;
        vertical-align: middle;
      }
    }
  }

  /**
   * Selected
   *
   * When rows are selected they are highlighted
   *
   * 1. Coloring Links and extra elements that don't color automatically with their parent
   */

  .k-table-container {
    tr.k-is-selected {
      td {
        background: $k-table-cell-accent-background;
        color: $k-table-cell-accent-color;

        a, i, span {
          color: $k-table-cell-accent-color;
        }
      }

      /* Re-set background on td's while hovering th */

      &:hover,
      &:focus {
        td {
          background-color: $k-table-cell-accent-hover-background;
        }
      }
    }
  }

  /* Positioner */

  .k-positioner {
    display: inline-block;
    vertical-align: middle;
    width: $k-table-row-positioner-size;
    height: round($k-table-row-positioner-size / 4);
    margin-top: round(($k-table-row-positioner-size - (round($k-table-row-positioner-size / 4))) / 2);
    margin-bottom: round(($k-table-row-positioner-size - (round($k-table-row-positioner-size / 4))) / 2);
    border-top: 1px solid $k-table-row-positioner-color;
    border-bottom: 1px solid $k-table-row-positioner-color;
    cursor: no-drop;

    &.k-is-active {
      cursor: move;
    }

    @include pseudo(before) {
      width: $k-table-row-positioner-size;
      height: round(($k-table-row-positioner-size / 2) + 2px);
      border-top: 1px solid $k-table-row-positioner-color;
      border-bottom: 1px solid $k-table-row-positioner-color;
      top: -(round($k-table-row-positioner-size / 4));
    }

    &:after {
      position: absolute;
      width: ($k-table-row-positioner-size * 2);
      height: ($k-table-row-positioner-size * 2);
      top: -($k-table-row-positioner-size - 1px);
      left: -($k-table-row-positioner-size / 2);
      content: attr(data-position);
      text-indent: 3px;
      vertical-align: bottom;
      color: #333;
      text-shadow: 0 0 3px white;
    }
  }

  .k-table-container {
    tr.k-is-selected {
      .k-positioner {
        &:after {
          color: white;
          text-shadow: none;
        }
      }
    }
  }

  /* Table heading sorting */

  .k-sort-ascending,
  .k-sort-descending {
    position: relative;
    display: inline-block;
    width: $k-table-sorting-width;
    height: $k-table-sorting-height;
    background: transparent;

    &:before,
    &:after {
      display: block;
      content: " ";
      position: absolute;
      opacity: $k-table-sorting-low-opacity;
    }

    &:before {
      @include caret(top, 4px);
      bottom: 100%;
    }

    &:after {
      @include caret(bottom, 4px);
      top: 100%;
    }
  }

  .k-sort-ascending {
    &:before {
      opacity: $k-table-sorting-high-opacity;
    }
  }

  .k-sort-descending {
    &:after {
      opacity: $k-table-sorting-high-opacity;
    }
  }

  th {
    .k-sort-ascending,
    .k-sort-descending {
      margin-left: $k-table-sorting-spacing;
      vertical-align: middle;
    }

    @include rtl {
      .k-sort-ascending,
      .k-sort-descending {
        margin-left: 0;
        margin-right: $k-table-sorting-spacing;
      }
    }

    a:focus,
    a:hover {
      .k-sort-ascending {
        &:after {
          opacity: $k-table-sorting-medium-opacity;
        }
      }

      .k-sort-descending {
        &:before {
          opacity: $k-table-sorting-medium-opacity;
        }
      }
    }
  }
}
