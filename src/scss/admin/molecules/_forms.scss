@if ($k-molecules == true and $k-molecule-forms != false) or $k-molecule-forms == true {

  /* Forms
     ========================================================================== */

  /**
   * 1. Set width and max-width to 100% to override custom template styling
   * 1. Make inputs at least the height of their button counterpart (base line-height + padding + border)
   * 2. Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
   * 3. Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
   * 4. Customize the `:focus` state to imitate native WebKit styles.
   * 5. Unstyle the caret on `<select>`s in IE10+.
   * 6. iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
   */

  .k-form-control {
    display: block;
    width: 100%; /* 1 */
    max-width: 100%; /* 1 */
    height: $k-input-base-height; /* 2 */
    padding: $k-base-vertical-spacing $k-base-horizontal-spacing;
    font-size: $k-font-size;
    line-height: $k-line-height;
    color: $k-input-color;
    background-color: $k-input-background;
    background-image: none; /* 3 */
    border: 1px solid $k-input-border;
    border-radius: $k-input-border-radius; /* 4 */
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
    transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;

    /* 5 */

    @include form-control-focus;

    /* Placeholders */

    &::-moz-placeholder {
      color: $k-input-placeholder-color;
      opacity: 1;
    }

    &:-ms-input-placeholder {
      color: $k-input-placeholder-color;
    }

    &::-webkit-input-placeholder {
      color: $k-input-placeholder-color;
    }

    /* 6 */

    &::-ms-expand {
      border: 0;
      background-color: transparent;
    }

    /* Disabled and read-only inputs */

    &[disabled],
    &[readonly],
    fieldset[disabled] & {
      background-color: $k-input-disabled-background;
      opacity: 1; /* 7 */
    }

    &[disabled],
    fieldset[disabled] & {
      cursor: $k-disabled-cursor;
    }
  }

  /* Reset height for `textarea`s */

  textarea.k-form-control {
    height: auto;
  }

  /**
   * Search inputs in iOS
   *
   * This overrides the extra rounded corners on search inputs in iOS so that our
   * `.k-form-control` class can properly style them. Note that this cannot simply
   * be added to `.k-form-control` as it's not specific enough. For details, see
   * https://github.com/twbs/bootstrap/issues/11586.
   */

  input[type="search"] {
    -webkit-appearance: none;
  }

  /**
   * Special styles for iOS temporal inputs
   *
   * In Mobile Safari, setting `display: block` on temporal inputs causes the
   * text within the input to become vertically misaligned. As a workaround, we
   * set a pixel line-height that matches the given height of the input, but only
   * for Safari. See https://bugs.webkit.org/show_bug.cgi?id=139848
   *
   * Note that as of 8.3, iOS doesn't support `datetime` or `week`.
   */

  @media screen and (-webkit-min-device-pixel-ratio: 0) {
    input[type="date"],
    input[type="time"],
    input[type="datetime-local"],
    input[type="month"] {
      &.k-form-control {
        line-height: $k-input-base-height;
      }

      .k-input-group--small & {
        line-height: $k-input-small-height;
      }

      .k-input-group--large & {
        line-height: $k-input-large-height;
      }
    }
  }

  /* Checkbox & Radio inputs */

  /* Shared styling between radio boxes and checkboxes */

  @include modernizr('.k-appearance') {
    input[type="checkbox"],
    input[type="radio"] {

      /**
       * 1. Resetting the default styling used by browsers. Don't do this for -moz-
       *    because the checkbox and radio box will look very ugly
       * 2. Positioning relative to position pseudo before element nicely
       * 5. Indicate that element is clickable
       */

      -webkit-appearance: none; /* 1 */
      /* -moz-appearance: don't set this; /* 1 */
      position: relative; /* 2 */
      height: $k-form-option-size;
      width: $k-form-option-size;
      margin: 0 .33em 0 0;
      border: $k-form-option-border;
      padding: 0;
      background: $k-form-option-background;
      display: inline-block;
      vertical-align: middle;
      cursor: pointer; /* 5 */
      box-shadow: $k-form-option-box-shadow;
      @include transition(background);

      /* Hover to indicate element is clickable */

      &:hover {
        background: #f1f1f1;
      }

      /* Set disabled border color a bit lighter so it won't appear to be larger */

      &:disabled {
        border-color: #bbb;
      }

      /**
       * 1. Position pseudo element absolute to have full control
       * 2. Position top-left, margin, width and height will take care of centering
       * 3. Initially hide the pseudo element
       * 4. Show the pseudo element when item is checked
       */

      &:before {
        position: absolute; /* 1 */
        top: 0; /* 2 */
        left: 0; /* 2 */
        visibility: hidden; /* 3 */
        transform: scale(0, 0); /* 3 */
        text-align: center;
        vertical-align: middle;
        background: transparent;
        @include transition;
      }

      &:checked:before {
        visibility: visible; /* 4 */
        transform: scale(1, 1); /* 4 */
      }
    }

    /* Put some space between the second box and the first label */

    label {

      /**
       * <input id="example1" />
       * <label for="example1">Label 1</label>
       * <input id="example2" />
       * <label for="example2">Label 2</label>
       */

      & + input[type="checkbox"],
      & + input[type="radio"] {
        margin-left: 1em;
      }

      /**
       * <label><input id="example3" /> Label 1</label>
       * <label><input id="example4" /> Label 2</label>
       */

      & + label {
        margin-left: 1em;
      }
    }
  }

  /* RTL */

  @include modernizr-rtl('.k-appearance') {
    input[type="checkbox"],
    input[type="radio"] {
      margin: 0 0 0 .33em;

      &:before {
        left: auto;
        right: 0;
      }
    }

    label {

      & + input[type="checkbox"],
      & + input[type="radio"] {
        margin-left: auto;
        margin-right: 1em;
      }

      & + label {
        margin-left: auto;
        margin-right: 1em;
      }
    }
  }

  /**
   * Checkbox
   *
   * 1. Remove rounded corners by default
   * 2. Display a check icon in the pseudo before element
   * 3. Height of the box minus the border size
   * 4. Height of the pseudo element minus a 1px padding/margin to move icon
        away from the side of the box
   * 5. Set the color of the check icon
   */

  @include modernizr('.k-appearance') {
    input[type="checkbox"] {
      border-radius: 0; /* 1 */

      @include icon-before(check, true) {
        /* 2 */
        width: $k-form-option-size - ($k-form-option-border-width * 2); /* 3 */
        height: $k-form-option-size - ($k-form-option-border-width * 2); /* 3 */
        line-height: $k-form-option-size - ($k-form-option-border-width * 2); /* 3 */
        font-size: $k-form-option-size - ($k-form-option-border-width * 4); /* 4 */
        color: $k-accent-color; /* 5 */
      }
    }
  }

  /**
   * Radio
   *
   * 1. Making the radio box round
   * 2. Adding content to display the pseudo element
   * 3. Small inner circle, scaling with the box itself
   * 4. positioning the inner circle
   * 5. Making inner circle actually round
   */

  @include modernizr('.k-appearance') {
    input[type="radio"] {
      border-radius: 50%; /* 1 */

      &:before {
        content: " "; /* 2 */
        width: $k-form-option-size - ($k-form-option-border-width * 8); /* 3 */
        height: $k-form-option-size - ($k-form-option-border-width * 8); /* 3 */
        margin: 3px; /* 4 */
        background: $k-form-option-color;
        border-radius: 50%; /* 5 */
      }
    }
  }

  /* Feedback states */

  .k-has-success {
    @include form-control-validation($k-state-success-color, $k-state-success-color, $k-state-success-background);
  }
  .k-has-warning {
    @include form-control-validation($k-state-warning-color, $k-state-warning-color, $k-state-warning-background);
  }
  .k-has-error {
    @include form-control-validation($k-state-danger-color, $k-state-danger-color, $k-state-danger-background);
  }

  /* Static form label */

  /**
   * Static form control text
   *
   * Apply class to a `p` element to make any string of text align with labels in
   * a horizontal form layout.
   *
   * 1. Size it appropriately next to real form controls
   * 2. Remove default margin from `p`
   */

  .k-static-form-label {
    display: inline-block;
    vertical-align: middle;
    max-width: 100%; /* 1 */
    font-weight: bold;
    @include content-block(5px);
  }

  /* Input group */

  /**
   * 1. For dropdowns
   * 2. Prevent input groups from inheriting border styles from table cells when placed within a table
   * 3. Ensure that the input is always above the *appended* addon button for proper border colors.
   * 4. IE9 fubars the placeholder attribute in text inputs and the arrows on
        select elements in input groups. To fix it, we float the input.
   * 5. Put focused element on top of the rest
   */

  .k-input-group {
    position: relative; /* 1 */
    display: flex;
    width: 100%;
    border-collapse: separate; /* 2 */

    /* The form control */

    .k-form-control {

      /* 3 */
      position: relative;
      z-index: 2;

      /* 4 */
      float: left;

      @include rtl {
        float: right;
      }

      width: auto;
      min-width: 15%;
      margin-bottom: 0;

      &:focus {
        z-index: 3; /* 5 */
      }
    }

    /* The button */

    .k-input-group__button {
      .k-button {
        height: $k-input-base-height;
      }
    }
  }

  /* Sizes */

  .k-input-group--large {
    & > .k-form-control,
    & > .select2-container--bootstrap .select2-selection--single,
    & > .k-input-group__addon,
    & > .k-input-group__button > .k-button {
      height: $k-input-large-height;
      padding: $k-large-vertical-spacing $k-large-horizontal-spacing;
      font-size: $k-large-font-size;
      line-height: $k-large-line-height;
      border-radius: $k-large-border-radius;

      @include rtl {
        border-radius: $k-large-border-radius;
      }
    }

    & > .select2-container--bootstrap .select2-selection--single .select2-selection--rendered {
      line-height: $k-large-line-height;
    }

    select.k-form-control {
      height: $k-input-large-height;
      line-height: $k-input-large-height;

      @include rtl {
        direction: rtl;
      }
    }

    textarea.k-form-control,
    select[multiple].k-form-control {
      height: auto;
    }
  }

  .k-input-group--small {
    & > .k-form-control,
    & > .select2-container--bootstrap .select2-selection--single,
    & > .k-input-group__addon,
    & > .k-input-group__button > .k-button {
      height: $k-input-small-height;
      padding: $k-extrasmall-vertical-spacing $k-extrasmall-horizontal-spacing;
      font-size: $k-small-font-size;
      line-height: $k-line-height;
      border-radius: $k-small-border-radius;

      @include rtl {
        border-radius: $k-small-border-radius;
      }
    }

    & > .select2-container--bootstrap .select2-selection--single .select2-selection--rendered {
      line-height: $k-small-line-height;
    }

    select.k-form-control {
      height: $k-input-small-height;
      line-height: $k-input-small-height;
    }

    textarea.k-form-control,
    select[multiple].k-form-control {
      height: auto;
    }
  }

  /* Input group parts */

  .k-input-group__addon,
  .k-input-group__button,
  .k-input-group .k-form-control {
    display: block;
    flex: 1 1 auto;
    margin: 0;

    &:not(:first-child):not(:last-child) {
      border-radius: 0;
    }
  }

  .k-input-group .select2-container {
    &:not(:first-child):not(:last-child) {
      .select2-selection--single {
        border-radius: 0;
      }
    }

    &.select2-container--open,
    &.select2-container--focus {
      z-index: 3;
    }
  }

  /**
   * Addon and addon wrapper for buttons
   *
   * 1. Match the inputs
   */

  .k-input-group__addon,
  .k-input-group__button {
    white-space: nowrap;
    vertical-align: middle; /* 1 */
    width: auto;
    display: block;
    flex: 0 0 auto;
  }

  /* Text addon */

  .k-input-group__addon {
    font-size: $k-font-size;
    line-height: $k-line-height;
    height: $k-input-base-height;
    padding: $k-base-vertical-spacing $k-base-horizontal-spacing;
    font-weight: normal;
    color: $k-input-color;
    text-align: center;
    background-color: $k-input-group-addon-background;
    border: 1px solid $k-input-group-addon-border;
    border-radius: $k-input-border-radius;
    overflow: hidden;
    text-overflow: ellipsis;;

    /* Nuke default margins from checkboxes and radios to vertically center within. */

    input[type="radio"],
    input[type="checkbox"] {
      margin: -0.33em -2px 0;
      vertical-align: middle;
    }
  }


  /* Reset rounded corners */

  .k-input-group .k-form-control:first-child,
  .k-input-group__addon:first-child,
  .k-input-group__button:first-child > .k-button,
  .k-input-group__button:first-child > .k-button-group > .k-button,
  .k-input-group__button:first-child > .k-dropdown__toggle,
  .k-input-group__button:last-child > .k-button:not(:last-child):not(.k-dropdown__toggle),
  .k-input-group__button:last-child > .k-button-group:not(:last-child) > .k-button {
    @include border-right-radius(0);
  }

  @include rtl {
    .k-input-group .k-form-control:first-child,
    .k-input-group__addon:first-child,
    .k-input-group__button:first-child > .k-button,
    .k-input-group__button:first-child > .k-button-group > .k-button,
    .k-input-group__button:first-child > .k-dropdown__toggle,
    .k-input-group__button:last-child > .k-button:not(:last-child):not(.k-dropdown__toggle),
    .k-input-group__button:last-child > .k-button-group:not(:last-child) > .k-button {
      @include border-right-radius($k-input-border-radius);
      @include border-left-radius(0);
    }
  }

  .k-input-group__addon:first-child {
    border-right: none;

    @include rtl {
      border-right: 1px solid $k-input-border;
      border-left: none;
    }
  }

  .k-input-group .k-form-control:last-child,
  .k-input-group__addon:last-child,
  .k-input-group__button:last-child > .k-button,
  .k-input-group__button:last-child > .k-button-group > .k-button,
  .k-input-group__button:last-child > .k-dropdown__toggle,
  .k-input-group__button:first-child > .k-button:not(:first-child),
  .k-input-group__button:first-child > .k-button-group:not(:first-child) > .k-button {
    @include border-left-radius(0);
  }

  @include rtl {
    .k-input-group .k-form-control:last-child,
    .k-input-group__addon:last-child,
    .k-input-group__button:last-child > .k-button,
    .k-input-group__button:last-child > .k-button-group > .k-button,
    .k-input-group__button:last-child > .k-dropdown__toggle,
    .k-input-group__button:first-child > .k-button:not(:first-child),
    .k-input-group__button:first-child > .k-button-group:not(:first-child) > .k-button {
      @include border-left-radius($k-input-border-radius);
      @include border-right-radius(0);
    }
  }

  .k-input-group__addon:last-child {
    border-left: 1px solid $k-input-border;

    @include rtl {
      border-left-width: 1px;
      border-right: none;
    }
  }

  /**
   * Button input groups
   *
   * 1. Jankily prevent input button groups from wrapping with `white-space` and
        `font-size` in combination with `inline-block` on buttons.
   * 2. Negative margin for spacing, position for bringing hovered/focused/actived
        element above the siblings.
   * 3. Bring the "active" button to the front
   * 4. Negative margin to only have a 1px border between the two
   */

  .k-input-group__button {
    position: relative;

    /* 1 */
    font-size: 0;
    white-space: nowrap;

    .k-button,
    .k-dropdown__menu {
      font-size: $k-font-size;
    }

    /* 2 */
    > .k-button {
      position: relative;
      font-size: $k-font-size;
      margin: 0;

      + .k-button {
        margin-left: -1px;
      }

      /* 3 */
      &:hover,
      &:focus,
      &:active {
        z-index: 2;
      }
    }

    /* 4 */
    &:first-child {
      > .k-button,
      > .k-button-group {
        margin-right: -1px;
      }

      @include rtl {
        > .k-button,
        > .k-button-group {
          margin-right: 0;
          margin-left: -1px;
        }
      }
    }

    &:last-child {
      > .k-button,
      > .k-button-group {
        z-index: 2;
        margin-left: -1px;
      }

      @include rtl {
        > .k-button,
        > .k-button-group {
          margin-left: 0;
          margin-right: -1px;
        }
      }
    }
  }

  /* Form groups */

  /**
   * Designed to help with the organization and spacing of vertical forms. For
   * horizontal forms, use the predefined grid classes.
   */

  .k-form-group {
    margin: 0;
    @include content-block;
  }

  /**
   * Form control sizing
   *
   * Build on `.k-form-control` with modifier classes to decrease or increase the
   * height and font-size of form controls.
   *
   * The `.k-form-group-* k-form-control` variations are sadly duplicated to avoid the
   * issue documented in https://github.com/twbs/bootstrap/issues/15074.
   */

  .k-form-group--small {
    .k-form-control {
      font-size: $k-small-font-size;
      height: $k-input-small-height;
      padding: $k-extrasmall-vertical-spacing $k-extrasmall-horizontal-spacing;
      line-height: $k-small-line-height;
      border-radius: $k-small-border-radius;
    }

    select.k-form-control {
      height: $k-input-small-height;
      line-height: $k-input-small-height;
    }

    textarea.k-form-control,
    select[multiple].k-form-control {
      height: auto;
    }
  }

  .k-form-group--large {
    .k-form-control {
      font-size: $k-large-font-size;
      height: $k-input-large-height;
      padding: $k-large-vertical-spacing $k-large-horizontal-spacing;
      line-height: $k-large-line-height;
      border-radius: $k-large-border-radius;
    }

    select.k-form-control {
      height: $k-input-large-height;
      line-height: $k-input-large-height;
    }

    textarea.k-form-control,
    select[multiple].k-form-control {
      height: auto;
    }
  }

  /* Inline form group */

  .k-inline-form-group {
    display: inline-block;
    margin-right: 1em;

    &:last-child {
      margin-right: 0;
    }

    @include rtl {
      margin-right: 0;
      margin-left: 1em;

      &:last-child {
        margin-left: 0;
        margin-right: 1em;
      }
    }

    .k-input-group,
    .k-button-group {
      display: block;
    }
  }

  /* Form row group */

  .k-form-row-group {
    display: table; /* To make sure we don't get empty pixels on the right */
    width: 100%; /* To make sure we don't get empty pixels on the right */
    background: $k-primary-plus-6-color;
    border-radius: 5px;
    border: 1px solid $k-primary-min-2-color;
    margin-bottom: $k-spacing;

    &:last-child {
      margin-bottom: 0;
    }
  }

  /* Form row */

  .k-form-row {
    margin: 0;
    border-bottom: 1px solid $k-primary-min-2-color;
    padding-bottom: 10px;

    &:last-child {
      border-bottom: 0;
    }

    @include breakpoint($k-beta) {
      display: table;
      width: 100%;
      padding-bottom: 0;

      @include rtl {
        direction: rtl;
      }

      &:last-child {
        border-bottom: none;
      }
    }

    .k-form-row__header {
      width: 100%;
      background: $k-primary-plus-4-color;
      padding: 10px;
    }

    .k-form-row__item {
      padding: 10px 10px 0 10px;

      @include breakpoint($k-beta) {
        display: table-cell;
        vertical-align: middle;
        padding: 10px;
        border-right: 1px solid $k-primary-min-2-color;

        @include rtl {
          border-right: none;
          border-left: 1px solid $k-primary-min-2-color;
        }
      }

      &:last-child {
        border-right: none;

        @include rtl {
          border-left: none;
        }
      }
    }

    .k-form-row__item--button,
    .k-form-row__item--label {
      width: 1%;
      white-space: nowrap;
    }

    .k-form-row__item--label {
      border-right: none;
      padding-right: 0;

      @include rtl {
        border-left: none;
        padding-right: 10px;
        padding-left: 0;
      }
    }

    .k-form-row__item--input {
      @include breakpoint($k-beta) {
        padding: 5px;
      }
    }

    .k-form-control {
      margin: 0;
    }

    .k-form-row__message {
      a {
        display: block;
        padding: 10px;

        &:focus,
        &:hover {
          background: $k-primary-plus-1-color;
        }
      }
    }

    &:first-child {
      .k-form-row__message {
        a {
          border-radius: 5px 5px 0 0;
        }
      }

      .k-form-row__header {
        border-radius: 5px 5px 0 0;
      }
    }

    &:last-child {
      .k-form-row__message {
        a {
          border-radius: 0 0 5px 5px;
        }
      }

      .k-form-row__header {
        border-radius: 0 0 5px 5px;
      }
    }
  }


  /* Form field info */

  .k-form-info {
    margin-top: 0.75em;
    @include content-block(1em);
    color: $k-type-lighter-color;
  }
}
