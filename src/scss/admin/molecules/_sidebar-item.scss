@if ($k-molecules == true and $k-molecule-sidebar-item != false) or $k-molecule-sidebar-item == true {

  /* Sidebar item
     ========================================================================== */

  .k-sidebar-item {
    & + & {
      margin-top: $k-sidebar-item-spacing;
    }

    @mixin item--flex {
      display: flex;
      flex-direction: column;
      flex: 0 1 auto;
      overflow: hidden;
      min-height: $k-sidebar-item-flex-min-height;
      max-height: 100%;

      div {
        flex: 1 1 auto;
        overflow: auto;
      }

      .k-sidebar-item__header {
        flex: 0 0 auto;
      }
    }

    @include breakpoint($k-sidebar-left-querie-width) {
      flex: 0 0 auto;

      &--flex {
        &:only-child {
          @include item--flex;
        }
      }
    }

    @include breakpoint($k-sidebar-left-querie-width) {
      &--flex {
        &:nth-child(n) {
          @include item--flex;
        }
      }
    }

    /* On mobile */

    &--flex {
      display: flex;
      flex-direction: column;
      max-height: 100%;
    }

    /**
     * Overflowing items
     *
     * 1. Set container to overflow it's items
     */

    &--overflow {
      overflow: auto; /* 1 */
      width: 100%;
      flex: 0 1 auto;

      @include resizing {
        overflow: hidden;
      }
    }
  }

  /**
   * Toggle item
   *
   * 1. Same as width but minus 2px border width
   */

  .k-sidebar-item--toggle {
    padding-bottom: $k-sidebar-item-spacing;

    .k-sidebar-item__header {
      position: relative;
    }

    .k-sidebar-item__toggle {
      position: absolute;
      top: $k-sidebar-item-spacing;
      right: $k-sidebar-item-spacing;

      @include icon-after(chevron-top, true) {
        display: block;
        background: $k-sidebar-item-toggle-background;
        border: $k-sidebar-item-toggle-border;
        border-radius: $k-sidebar-item-toggle-radius;
        width: $k-sidebar-item-toggle-size;
        line-height: $k-sidebar-item-toggle-line-height; /* 1 */
        text-align: center;
        vertical-align: middle;
        font-size: $k-sidebar-item-toggle-font-size;
        cursor: pointer;
        @include transition;
      }

      &.k-is-active:after {
        transform: rotate(180deg);
      }

      @include rtl {
        right: auto;
        left: $k-sidebar-item-spacing;
      }
    }
  }

  /* Sidebar item header */

  .k-sidebar-item__header {
    padding: $k-sidebar-item-spacing $k-sidebar-item-spacing 0;
    font-weight: $k-sidebar-item-header-font-weight;
    text-transform: $k-sidebar-item-header-text-transform;
    font-size: $k-sidebar-item-header-font-size;
    line-height: $k-sidebar-item-header-line-height;
  }

  /* Sidebar item content */

  .k-sidebar-item__content {
    padding: $k-sidebar-item-spacing;
  }

  .k-sidebar-item__content--small {
    padding: $k-sidebar-item-small-spacing;
  }

  .k-sidebar-item__content--horizontal {
    padding: $k-sidebar-item-horizontal-spacing;
  }
}
